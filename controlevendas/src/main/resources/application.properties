
logging.file = /logs/pucmg_tcc.log

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url = jdbc:mysql://localhost:3306/pucmg_tcc?useTimezone=true&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = 
server.port = 8080

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.database = MYSQL
spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.dialect.storage_engine = innodb
spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy

# ===============================
# = CLOUD AWS CREDENTIALS
# ===============================
cloud.aws.credentials.accessKey=accessKey
cloud.aws.credentials.secretKey=secretKey
aws.sns.notification.topic=arn:aws:sns:us-east-2:numero:compras
consumer.sqs.message.queue.name=cadastrar-produto

auth.secretKey=secret_key

# ===============================
# = Spring Boot Client Configs
# ===============================

# admin.ip = IP onde Spring Boot Admin esta hospedado. Incluir http:// ou https://
# admin.port = Porta do Spring Boot Admin
# admin.user = Usuario para acesso ao Spring Boot Admin
# admin.password = Senha para acesso ao Spring Boot Admin
#
# server.ip = IP onde este servico esta hospedado. Incluir http:// ou https://
admin.ip=http://localhost
admin.port=9090
admin.user=teste
admin.password=teste
server.ip=http://localhost
spring.application.name=controle-vendas

# ===============================
# = Spring Boot Admin Client
# ===============================

spring.boot.admin.client.username=${admin.user}
spring.boot.admin.client.password=${admin.password}
spring.boot.admin.client.name=controle-vendas
spring.boot.admin.client.url=${admin.ip}:${admin.port}

management.security.enabled=false
management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=healthcheck
management.endpoint.health.show-detail=always

spring.boot.admin.client.instance.management-url=${server.ip}:${server.port}
spring.boot.admin.client.instance.management-base-url=${server.ip}:${server.port}
spring.boot.admin.client.instance.service-url=${server.ip}:${server.port}
spring.boot.admin.client.instance.service-base-url=${server.ip}:${server.port}
spring.boot.admin.client.instance.prefer-ip=true
